on:
  workflow_dispatch:
    types: [ created ]
  push:
    branches:
      - feat/k8s-auto-deployment

name: Deploy to AWS AKS

jobs:
  deploy:
    name: Build image and push to Amazon ECR
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.5

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build image
      run: |
        docker build -t kilt/social-kyc-demo:latest .

    - name: Tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: kilt/social-kyc-demo
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker tag kilt/social-kyc-demo $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker tag kilt/social-kyc-demo $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
    - name: Deploy to kilt cluster
      uses: kodermax/kubectl-aws-eks@v1.0.8
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG }}
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: kilt/social-kyc-demo
        IMAGE_TAG: ${{ github.sha }}
      with:
        args: rollout restart deployment social-kyc-demo -n social-kyc

    - name: Verify deployment
      uses: kodermax/kubectl-aws-eks@v1.0.8
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG }}
      with:
        args: rollout status deployment social-kyc-demo -n social-kyc
